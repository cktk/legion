<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.esmooc.legion.edu.mapper.PaperMapper">
    <select id="getLastPaperByClazzIdUserId" resultType="com.esmooc.legion.edu.entity.ExamPaper">
        select
        id,
        clazz_id as 'clazzId',
        user_id as 'userId',
        grade,
        history_question as 'historyHquestion',
        is_pass as 'isPass',
        create_time as 'createTime',
        is_delete as 'isDelete'
        from
        edu_exam_paper
        where
        clazz_id = #{clazzId}
        and
        user_id = #{userId}
        <if test="type != null and type != ''">
            and
            type = #{type}
        </if>
        order by
        create_time desc
        limit 1
    </select>

    <select id="getRandomQuestionIdByClazzId" resultType="java.lang.String">
        SELECT
        id
        FROM
        edu_exam_question
        where
        (clazz_id = #{clazzId}
        or
        bank_id = #{clazzId})
        and
        type = #{type}
        <if test="bankId != null and bankId != ''">
            and
            bank_id = #{bankId}
        </if>
        ORDER BY RAND()
        LIMIT #{count}
    </select>

    <select id="getRandomQuestionIdByMajorIds" resultType="java.lang.String">
        SELECT
        id
        FROM
        edu_exam_question
        where
        major_id in
        <foreach collection="majorIds" item="id" separator="," close=")" open="(">
            #{id}
        </foreach>
        and
        type = #{type}
        <if test="bankId != null and bankId != ''">
            and
            bank_id = #{bankId}
        </if>
        ORDER BY RAND()
        LIMIT #{count}
    </select>

    <insert id="savePaperQuestion">
        insert into
        edu_exam_paper_question
        set
        id = #{id},
        paper_id = #{paperId},
        question_id = #{data}
    </insert>

    <select id="selectLastPaperId" resultType="com.esmooc.legion.edu.entity.ExamPaper">
        select
        id,
        clazz_id as 'clazzId',
        user_id as 'userId',
        type
        from
        edu_exam_paper
        where
        clazz_id = #{id}
        and
        user_id = #{userId}
        order by
        create_time
        desc
        limit 1
    </select>

    <select id="selectCountPaperQuestion" resultType="java.lang.Integer">
        select
        count(*)
        from
        edu_exam_paper_question
        where
        paper_id = #{lastPaperId}
    </select>

    <update id="updatePaperSubmit">
        update
        edu_exam_paper
        set
        grade = #{grade},
        history_question = #{histroy},
        is_pass = #{issue},
        create_time = #{time},
        certificate = #{certificate}
        where
        id = #{paperId}
    </update>

    <select id="getHistroyById" resultType="java.lang.String">
        select
        history_question
        from
        edu_exam_paper
        where
        id = #{id}
        limit 1
    </select>

    <select id="selectPaperIdByClazzId" resultType="java.lang.String">
        select
        id
        from
        edu_exam_paper
        where
        clazz_id =#{id}
        and
        type = '1'
        order by
        create_time
        desc
        limit 1
    </select>

    <select id="getPaperMessage" resultType="java.lang.String">
        select
        concat(IF(grade is null, '0', grade),'::',IF(is_pass = null,'不及格', IF(is_pass = 1, '及格','不及格')))
        from
        edu_exam_paper
        where
        id = #{id}
    </select>

    <select id="getClazzNameByPaperId" resultType="java.lang.String">
        select
        bc.course_title
        from
        edu_exam_paper bep
        left join
        edu_course bc
        on
        bep.clazz_id = bc.id
        where
        bep.id = #{paperId}
    </select>

    <select id="getCreatePaperNameByPaperId" resultType="java.lang.String">
        select
        be.title
        from
        edu_exam_paper bep
        left join
        edu_exam be
        on
        bep.clazz_id = be.id
        where
        bep.id = #{paperId}
    </select>

    <select id="getMaxCertificate" resultType="java.lang.String">
        select IF(certificate is null, IF(certificate = '', 1, certificate), certificate)
        from edu_exam_paper
        order by certificate
                desc limit 1
    </select>

    <select id="getTypeById" resultType="java.lang.String">
        select
        type
        from
        edu_exam_paper
        where
        id = #{paperId}
    </select>

    <select id="getPaperById" resultType="com.esmooc.legion.edu.entity.ExamPaper">
        select
        bep.id,
        bep.clazz_id as 'clazzId',
        IF(bep.grade is null, 0, bep.grade) as 'grade',
        IF(bep.is_pass is null, 0, bep.is_pass) as 'isPass',
        IF(bc.course_title is null, be.title, bc.course_title) as 'clazzName',
        IF(bc.course_title is null, 0, bc.period) as 'period',
        bep.create_time as 'createTime',
        bep.certificate
        from
        edu_exam_paper bep
        left join
        edu_course bc
        on
        bc.id = bep.clazz_id
        left join
        edu_exam be
        on
        be.id = bep.clazz_id
        where
        bep.id = #{id}
    </select>

    <insert id="batchSavePaperQuestion">
        insert into
        edu_exam_paper_question (id,paper_id,question_id)
        values
        <foreach collection="ids" separator="," item="ids">
            (#{id}, #{paperId},#{ids})
        </foreach>
    </insert>

    <select id="getPaperMajorIdsById" resultType="java.lang.String">
        select
        major_id
        from
        edu_exam_major
        where
        exam_id = #{clazzId}
    </select>

    <select id="getExamMajorById" resultType="java.lang.String">
        select
        GROUP_CONCAT(major_id)
        from
        edu_exam_major
        where
        exam_id = #{id}
    </select>

    <select id="getExamNameById" resultType="java.lang.String">
        select
        title
        from
        edu_exam
        where
        id = #{id}
    </select>

    <delete id="deleteExamBankByClazzId">
        delete
        from
        edu_exam_question_bank
        where
        clazz_id = #{id}
    </delete>

    <update id="deleteQuestionByClazzId">
        update
        edu_exam_question
        set
        is_delete = '1'
        where
        clazz_id = #{id}
    </update>

    <select id="getPaperName" resultType="java.lang.String">
        select
        IF(be.title is null, bc.course_title,be.title) as 'a'
        from
        edu_exam_paper bep
        left join
        edu_exam be
        on
        bep.clazz_id = be.id
        left join
        edu_course bc
        on
        bc.id = bep.clazz_id
        where
        bep.id = #{id}
    </select>

    <select id="getNoPassCountByClazzIdUserId" resultType="java.lang.Integer">
        select
        no_pass_count
        from
        edu_learning_record
        where
        course_id = #{clazzId}
        and
        user_id = #{userId}
    </select>

    <update id="updateNoPassCountByClazzIdUserId">
        update
        edu_learning_record
        set
        no_pass_count = #{noPassCount}
        where
        course_id = #{clazzId}
        and
        user_id = #{userId}
    </update>

    <delete id="deletePaperById">
        delete
        from
        edu_exam_paper
        where
        id = #{id}
    </delete>

    <update id="updateBankMajor">
        update
        edu_exam_question_bank
        set
        major_id = #{major}
        where
        clazz_id = #{clazzId}
    </update>

    <select id="getStudyTypeByClazzIdUserId" resultType="java.lang.Integer">
        select
        study_type
        from
        edu_learning_record
        where
        course_id = #{clazzId}
        and
        user_id = #{userId}
        limit 1
    </select>

    <select id="getIsDeleteByExamId" resultType="java.lang.Integer">
        select
        is_delete
        from
        edu_exam
        where
        id = #{id}
    </select>

    <select id="getIsDeleteByClazzId" resultType="java.lang.Integer">
        select
        del_flag
        from
        edu_course
        where
        id = #{clazzId}
    </select>

    <select id="getQuestionCountByClazzId" resultType="java.lang.Integer">
        SELECT
        count(*)
        FROM
        edu_exam_question
        where
        (clazz_id = #{clazzId}
        or
        bank_id = #{clazzId})
        and
        type = #{type}
        <if test="bankId != null and bankId != ''">
            and
            bank_id = #{bankId}
        </if>
    </select>

    <select id="getQuestionCountByMajorIds" resultType="java.lang.Integer">
        SELECT
        count(*)
        FROM
        edu_exam_question
        where
        major_id in
        <foreach collection="majorIds" item="id" separator="," close=")" open="(">
            #{id}
        </foreach>
        and
        type = #{type}
        <if test="bankId != null and bankId != ''">
            and
            bank_id = #{bankId}
        </if>
    </select>

    <select id="getBankIdByClazzId" resultType="java.lang.String">
        select
        id
        from
        edu_exam_question_bank
        where
        clazz_id = #{clazzId}
    </select>
</mapper>
