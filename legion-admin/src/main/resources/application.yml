server:
  port: 8081
  servlet:
    context-path: /api
  tomcat:
    uri-encoding: UTF-8
    threads:
      max: 1000
      min-spare: 30
    # 最大吞吐量不限制
    max-swallow-size: -1
  # 优雅停机 关闭容器后默认等待30秒继续执行没处理完的任务 避免数据不一致
  shutdown: graceful


spring:
  flyway:
    enabled: false
    # 最开始已经存在表结构，且不存在 flyway_schema_history 表时，需要设置为 true
    baseline-on-migrate: true
    clean-on-validation-error: true
    # 迁移前校验 SQL 文件是否存在问题
    validate-on-migrate: true
    # 是否清空数据库
    clean-disabled: true
    # 校验路径下是否存在 SQL 文件
    fail-on-missing-locations: false
#    locations: classpath:db
    init-sqls:
      - SET @OLD_UNIQUE_CHECKS = @@UNIQUE_CHECKS, UNIQUE_CHECKS = 0;
      - SET @OLD_FOREIGN_KEY_CHECKS = @@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS = 0;
      - SET @OLD_SQL_MODE = @@SQL_MODE, SQL_MODE ='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';
      - CREATE SCHEMA IF NOT EXISTS `{schema}` DEFAULT CHARACTER SET utf8 COLLATE utf8_general_ci;
  documentation:
    druid:
      stat-view-servlet:
        # 默认true 内置监控页面首页/druid/index.html
        enabled: true
        url-pattern: /druid/*
        # 允许清空统计数据
        reset-enable: true
        login-username: root
        login-password: root
        # IP白名单 多个逗号分隔
        allow:
        # IP黑名单
        deny:
      filter:
        stat:
          # 开启监控sql
          enabled: true
          # 显示并标注慢sql 默认当超过3秒显示
          log-slow-sql: true
          slow-sql-millis: 3000
          merge-sql: true
        # 防SQL注入过滤
        wall:
          config:
            # 允许多条sql同时执行
            multi-statement-allow: true
    dynamic:
      lazy: true
      p6spy: true
      druid:
        initial-size: 5
        min-idle: 5
        maxActive: 20
        maxWait: 60000
        timeBetweenEvictionRunsMillis: 60000
        minEvictableIdleTimeMillis: 300000
        testWhileIdle: true
        testOnBorrow: false
        testOnReturn: false
        poolPreparedStatements: true
        maxPoolPreparedStatementPerConnectionSize: 20
        filters: stat,wall,slf4j
        connectionProperties: druid.stat.mergeSql\=true;druid.stat.slowSqlMillis\=5000
  profiles:
    active: dev
  freemarker:
    allow-request-override: false
    allow-session-override: false
    cache: true
    charset: UTF-8
    check-template-location: true
    content-type: text/html
    enabled: true
    expose-request-attributes: false
    expose-session-attributes: false
    expose-spring-macro-helpers: true
    prefer-file-system-access: true
    suffix: .ftl
    template-loader-path: classpath:/templates/
  servlet:
    multipart:
      max-file-size: -1
      max-request-size: -1
  main:
    allow-bean-definition-overriding: true


  autoconfigure:
    exclude:
      - com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure

  # 文件大小上传配置
  boot:
    admin:
      # 修改上下文路径
      context-path: /legion/admin
      client:
        # 服务端url
        url: http://${MONITOR_HOST:127.0.0.1}:${MONITOR_PORT:10086}
        instance:
          # 实例url
          service-base-url: http://127.0.0.1:${server.port}
        username: ${MONITOR_USER:admin}
        password: ${MONITOR_PWD:admin}

  web:
    resources:
      static-locations: classpath:/static/,classpath:/views/
mybatis-plus:
  tenant-enable: ture
  mapper-locations: classpath:mapper/**/*Mapper.xml
  global-config:
    banner: false
    db-config:
      id-type: auto
      field-strategy: NOT_EMPTY
  type-handlers-package: com.esmooc.legion.core.common.data.handler
  configuration:
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl


security:
  oauth2:
    client:
      client-id: pig
      client-secret: pig
      scope: server
      ignore-urls:
        - /druid/**
        - /actuator/**
        - /v2/api-docs-ext
        - /doc.html/**
        - /webjars/**
        - /swagger-resources/**
        - /v2/api-docs/**
        - /favicon.ico
        - /oauth/**
        - /token/**
        - /editor-app/**
        - /modeler.html
        - /ws/**
        - /tenant/list
management:
  endpoints:
    web:
      exposure:
        include: '*'
  endpoint:
    health:
      show-details: always


# Swagger2 配置信息
kite:
  swagger:
    enabled: true
    title: Kite Boot Api
    description: Kite 的 swagger2 接口。
    version: 0.0.1
    license:
    licenseUrl:
    terms-of-service-url:
    contact:
      name: Kite
      email:
      url:
    authorization:
      name: oauth2
      auth-regex: ^.*$
      authorization-scope-list:
        - scope: server
          description: server all
      token-url-list:
        - http://127.0.0.1:9999/api/oauth/token
