# 配置文件加密key 生产环境中可通过环境变量、命令行等形式进行设置
jasypt:
  encryptor:
    password: legion

server:
  port: 8080
  servlet:
    context-path: /api
  tomcat:
    uri-encoding: UTF-8
    threads:
      max: 1000
      min-spare: 30
    # 最大吞吐量不限制
    max-swallow-size: -1
  # 优雅停机 关闭容器后默认等待30秒继续执行没处理完的任务 避免数据不一致
  shutdown: graceful

spring:
  main:
    #    重复的Bean覆盖掉 用来解决xssBean重复
    allow-bean-definition-overriding: true
  mvc:
    pathmatch:
      matching-strategy: ant_path_matcher #解决SpringBoot2.6.3与Swagger3版本冲突问题
  autoconfigure:
    exclude:
      - org.activiti.spring.boot.SecurityAutoConfiguration
      - com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure
  lifecycle:
    # 配置优雅停机后的缓冲器 最大等待时间
    timeout-per-shutdown-phase: 10S
  # 数据源
  datasource:
    # Druid StatViewServlet配置
    type: com.alibaba.druid.pool.DruidDataSource
    druid: # 这里只需要配置一个数据源 作为主数据源  剩下数据源去数据库进行加载 架构 t_datasource_conf
      driver-class-name: com.mysql.cj.jdbc.Driver
      url: jdbc:mysql://${MYSQL_HOST:127.0.0.1}:${MYSQL_PROT:3306}/${MYSQL_SCHEMA:legion}?characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=false&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=GMT%2B8&nullCatalogMeansCurrent=true&allowPublicKeyRetrieval=true
      username: ${MYSQL_USER:root}
      password: ${MYSQL_PWD:root}
      query-ds-sql: 'select * from t_datasource_conf where del_flag = 0'
      stat-view-servlet:
        # 默认true 内置监控页面首页/druid/index.html
        enabled: true
        url-pattern: /druid/*
        # 允许清空统计数据
        reset-enable: true
        login-username: ${MONITOR_USER:admin}
        login-password: ${MONITOR_PWD:admin}
        # IP白名单 多个逗号分隔
        allow:
        # IP黑名单
        deny:
      filter:
        stat:
          # 开启监控sql
          enabled: true
          # 显示并标注慢sql 默认当超过3秒显示
          log-slow-sql: true
          slow-sql-millis: 3000
          merge-sql: true
        # 防SQL注入过滤
        wall:
          config:
            # 允许多条sql同时执行
            multi-statement-allow: true
    dynamic:
      lazy: true #默认false非懒启动，系统加载到数据源立即初始化连接池
  jpa:
    # 显示sql
    show-sql: true
    # 自动生成表结构 关闭设为  none create update
    hibernate:
      ddl-auto: none
  # Redis 若设有密码自行添加配置password
  redis:
    host: ${REDIS_HOST:127.0.0.1}
    password: ${REDIS_PWD:123456}
    port: ${REDIS_PROT:6379}
    database: ${REDIS_DATABASE:0}
    timeout: 10s
    lettuce:
      pool:
        min-idle: 0
        max-idle: 16
        max-active: 8
        max-wait: 2ms
  # 定时任务
  quartz:
    # 任务信息存储至数据库
    job-store-type: jdbc
    jdbc:
      # 自动生成表 若已有表数据请务必关闭 ALWAYS/EMBEDDED/NEVER
      initialize-schema: NEVER
    properties:
      org:
        quartz:
          scheduler:
            # 允许调度程序节点一次获取（触发）的最大触发器数
            batchTriggerAcquisitionMaxCount: 5
          jobStore:
            # 加锁调度
            acquireTriggersWithinLock: true
            # “容忍”触发器经过下一次触发时间的毫秒数
            misfireThreshold: 10000
  # 工作流
  activiti:
    async-executor-activate: false
    check-process-definitions: false
    db-identity-used: true
    # 自动生成Activiti相关表 第一次生成后建议关闭提高运行速度
    database-schema-update: false
    history-level: none
    # 扩展配置
    legion:
      # 流程图字体 默认宋体
      activityFontName: Microsoft YaHei
      labelFontName: Microsoft YaHei
  # 文件大小上传配置
  servlet:
    multipart:
      max-file-size: -1
      max-request-size: -1
  jackson:
    time-zone: GMT+8
    serialization:
      fail-on-empty-beans: false

  boot:
    admin:
      client:
        url: http://${MONITOR_HOST:127.0.0.1}:${MONITOR_PORT:10086}

  web:
    resources:
      cache:
        cachecontrol:
          # 静态资源缓存30天
          max-age: 30D

legion:
  xsequence: #发号器相关配置
    #    snowflake:
    #      datacenterId : #数据中心 1-31
    #      workerId:  # 当前机器ID 1-31
    #    redis :
    db:
      retry-times: 3  # 重试次数
      table-name: t_sequence #表名
  xss:
    #是否开启xss过滤
    enabled: true
    # 拦截路径
    path-patterns: /**
    #忽略路径
    exclude-patterns:
  # 全局限流
  ratelimit:
    # 开启
    enable: true
    # 每1秒内（单位毫秒）
    timeout: 1000
    # 总限制200个请求（单位个）
    limit: 200
  # IP限流
  iplimit:
    # 开启
    enable: true
    # 每1秒内（单位毫秒）
    timeout: 1000
    # 每个ip限制20个请求（单位个）
    limit: 20
  # 后台token交互方式
  token:
    # 默认为true，token将存入redis，并具有单点登录功能 设为false使用JWT交互
    redis: true
    # 是否开启单设备登陆 仅当token交互方式为redis时生效
    sdl: false
    # token中存储用户权限数据 设为true开启后可避免每次请求再获取用户权限，但有可能导致编辑权限菜单后无法读取到最新权限数据（需用户重新登录）
    storePerms: true
    # token过期时间 redis模式有请求自动刷新（分钟）
    tokenExpireTime: 60
    # 用户选择 保存登录状态/记住我 对应token过期时间（天）
    saveLoginTime: 7
    # 限制用户登陆错误次数（次）
    loginTimeLimit: 10
    # 错误超过次数后多少分钟后才能继续登录（分钟）
    loginAfterTime: 10
  # app应用 token交互配置
  appToken:
    # 是否开启同一平台单设备登陆（如安卓设备只允许登录一个相同账号，同时IOS设备可允许一个设备登陆）
    spl: true
    # token过期时间 有请求自动刷新（天）
    tokenExpireTime: 30
  # 使用Spring @Cacheable注解失效时间
  cache:
    # 缓存过期时间 Duration类型 D–天 H小时 M–分钟 S–秒 永久不过期设为非正值
    timeToLive: 15D
  # 文件大小上传配置 单位MB
  maxUploadFile: 1024
  # 腾讯位置服务key配置 腾讯位置服务官网注册添加key
  qqlbs:
    key: 7QPBZ-5TXKO-HADWR-SSJ5R-F5HIE-FJFN6
  # 第三方社交登录配置
  social:
    # 前端回调登录地址
    callbackFeUrl: http://127.0.0.1:9999/login
    # 前端绑定账号回调地址
    callbackFeRelateUrl: http://127.0.0.1:9999/relate
    # github
    github:
      clientId: 你的clientId
      clientSecret: 你的clientSecret
      callbackUrl: http://127.0.0.1:8888/legion/social/github/callback
    # qq
    qq:
      appId: 你的appId
      appKey: 你的appKey
      callbackUrl: http://127.0.0.1:8888/legion/social/qq/callback
    # weibo
    weibo:
      appKey: 你的appKey
      appSecret: 你的appSecret
      callbackUrl: http://127.0.0.1:8888/legion/social/weibo/callback
    # wechat
    wechat:
      appId: 你的appId
      appSecret: 你的appSecret
      callbackUrl: http://127.0.0.1:8888/legion/social/wechat/callback
    # 钉钉
    dingding:
      # 扫码登录应用
      appId: 你的appId
      appSecret: 你的appSecret
      callbackUrl: http://127.0.0.1:8888/legion/social/dingding/callback
    # 企业微信
    workwechat:
      appId: 你的appId 企业的CorpID
      agentId: 你的应用ID
      appSecret: 你的应用Secret
      callbackUrl: http://127.0.0.1:8888/legion/social/workwechat/callback

# 需要验证码校验的接口路径 支持通配符 自动过滤拦截校验 无需开发人员再次校验
captcha:
  # 图片验证码验证
  image:
    - /api/legion/auth/login # 登录接口
    - /api/legion/oauth2/authorize # 认证接口
  # 短信验证码验证
  sms:
    - /api/legion/auth/regist # 注册接口
    - /api/legion/auth/smsLogin # 短信登录接口
    - /api/legion/auth/resetByMobile # 手机重置密码
    - /api/legion/user/changeMobile # 更换绑定手机
    - /api/legion/app/v1/member/quickLogin # 会员快捷登录注册接口
  # Vaptcha验证码验证
  vaptcha:
    - /api/legion/common/captcha/sendRegistSms/** # 发送注册短信
    - /api/legion/common/captcha/sendResetSms/** # 发送重置密码短信
    - /api/legion/email/sendResetCode/** # 发送重置密码邮件
    - /api/legion/social/relate # 绑定第三方账号
  # Email验证码验证
  email:
    - /api/legion/auth/resetByEmail # 邮件重置密码
    - /api/legion/email/editEmail # 修改绑定邮箱

# 忽略url
ignored:
  # 无需登录认证的请求
  urls:
    - /legion/ws/**
    - /legion/common/**
    - /legion/auth/**
    - /legion/app/v1/**
    - /legion/oauth2/**
    - /legion/actuator/**
    - /chat/**
    - /modeler/**
    - /legion/act/**
    - /legion/dictData/getByType/**
    - /legion/email/sendResetCode/**
    - /legion/file/view/**
    - /legion/social/**
    - /legion/setting/notice
    - /druid/**
    - /doc.html
    - /swagger-resources/**
    - /v2/api-docs
    - /**/*.js
    - /**/*.css
    - /**/*.png
    - /**/*.ico
  # 限流及黑名单不拦截的路径
  limitUrls:
    - /legion/admin/**
    - /**/*.js
    - /**/*.css
    - /**/*.png
    - /**/*.ico

# Actuator
management:
  health:
    # 暂未用到ES 关闭其健康检查
    elasticsearch:
      enabled: false
  endpoint:
    health:
      show-details: always
      status:
        http-mapping:
          DOWN: 200
          OUT_OF_SERVICE: 200
          FATAL: 200
          UNKNOWN: 200
  endpoints:
    web:
      base-path: /legion/actuator/
      exposure:
        include: '*'

# 接口文档增强UI Swagger界面内容配置
knife4j:
  enable: true

swagger:
  title: legion
  description: legion -描述
  version: M1
  termsOfServiceUrl: http://www.esmooc.com
  contact:
    name: DaiMao
    url: http://www.esmooc.com
    email: cktk@qq.com
  # 分组名
  group: 系统业务
  group2: 移动端
  group3: 测试分组
# Mybatis-plus
mybatis-plus:
  mapper-locations: classpath*:mapper/**/*.xml
  configuration:
    map-underscore-to-camel-case: false
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
  global-config:
    db-config:
      logic-delete-field: del_flag  # 全局逻辑删除的实体字段名(since 3.3.0,配置后可以忽略不配置步骤2)
      logic-delete-value: 1 # 逻辑已删除值(默认为 1)
      logic-not-delete-value: 0 # 逻辑未删除值(默认为 0)

# 日志
logging:
  # 输出级别
  level:
    root: info
  file:
    path: legion-logs
  logback:
    rollingpolicy:
      # 最大保存天数
      max-history: 30
      # 每个文件最大大小
      max-file-size: 50MB
