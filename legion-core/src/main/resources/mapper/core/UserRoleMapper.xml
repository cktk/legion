<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.esmooc.legion.core.mapper.UserRoleMapper">
    <resultMap id="BaseResultMap" type="com.esmooc.legion.core.entity.UserRole">
        <!--@mbg.generated-->
        <!--@Table t_user_role-->
        <id column="id" jdbcType="BIGINT" property="id" />
        <result column="create_by" jdbcType="VARCHAR" property="createBy" />
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
        <result column="del_flag" jdbcType="BOOLEAN" property="delFlag" />
        <result column="update_by" jdbcType="VARCHAR" property="updateBy" />
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
        <result column="role_id" jdbcType="BIGINT" property="roleId" />
        <result column="user_id" jdbcType="BIGINT" property="userId" />
        <result column="update_id" jdbcType="VARCHAR" property="updateId" />
        <result column="create_id" jdbcType="VARCHAR" property="createId" />
    </resultMap>
    <sql id="Base_Column_List">
        <!--@mbg.generated-->
        id, create_by, create_time, del_flag, update_by, update_time, role_id, user_id, update_id,
        create_id
    </sql>

    <select id="findByUserId" resultType="com.esmooc.legion.core.entity.Role">
        SELECT r.id id, name, r.data_type as dataType
        FROM t_user_role ur
        LEFT JOIN t_role r
        ON ur.role_id = r.id
        WHERE user_Id = #{userId}
    </select>

    <select id="findDepIdsByUserId" resultType="java.lang.String">
        SELECT DISTINCT rd.department_id as departmentId
        FROM t_role_department rd
        WHERE role_id IN
        ( SELECT ur.role_id FROM t_user_role ur WHERE ur.user_id = #{userId} )
    </select>
</mapper>
